"use strict";
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    setModeInConfiguration: function() {
        return setModeInConfiguration;
    },
    default: function() {
        return _default;
    }
});
const _extends = require("@swc/helpers/_/_extends");
const _devkit = require("@nx/devkit");
const _executoroptionsutils = require("@nx/devkit/src/generators/executor-options-utils");
async function setModeInConfiguration(tree) {
    forAllProjectsUsingViteAddMode(tree);
    await (0, _devkit.formatFiles)(tree);
}
const _default = setModeInConfiguration;
function forAllProjectsUsingViteAddMode(tree) {
    (0, _executoroptionsutils.forEachExecutorOptions)(tree, '@nrwl/vite:build', (_options, projectName, targetName, configuration)=>{
        var _projectConfiguration_targets_targetName_configurations_configuration;
        if (!configuration) {
            return;
        }
        const projectConfiguration = (0, _devkit.readProjectConfiguration)(tree, projectName);
        var _mode;
        (_mode = (_projectConfiguration_targets_targetName_configurations_configuration = projectConfiguration.targets[targetName].configurations[configuration]).mode) != null ? _mode : _projectConfiguration_targets_targetName_configurations_configuration.mode = configuration;
        (0, _devkit.updateProjectConfiguration)(tree, projectName, _extends._({}, projectConfiguration));
    });
}

//# sourceMappingURL=set-mode-in-configuration.js.map